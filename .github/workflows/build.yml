name: Build

on:
  push:
  pull_request:

jobs:
  check:
    name: Check
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: Swatinem/rust-cache@v1
      - run: sudo apt-get update; sudo apt-get install -y libspeechd-dev
        if: ${{ runner.os == 'Linux' }}
      - run: |
          choco install -qy llvm
          echo LIBCLANG_PATH=c:\program` files\llvm\bin >> $Env:GITHUB_ENV
        if: ${{ runner.os == 'Windows' }}
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: rustfmt, clippy
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: check
          args: --all-features --examples
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features

  build_android:
    name: Build Android
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true
      - uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - run: |
          ./gradlew assemble
